<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Programm>
    <DeclNode>
        <FuncDeclNode Type="VOID">
            <IdentifierExpression>prodotto_tramite_addizione</IdentifierExpression>
            <Body>
                <VarDeclNode>
                    <Type>FLOAT</Type>
                    <IdInitNode>
                        <IdentifierExpression>num1</IdentifierExpression>
                    </IdInitNode>
                    <IdInitNode>
                        <IdentifierExpression>num2</IdentifierExpression>
                    </IdInitNode>
                    <IdInitNode>
                        <IdentifierExpression>tmp1</IdentifierExpression>
                    </IdInitNode>
                    <IdInitNode>
                        <IdentifierExpression>tmp2</IdentifierExpression>
                    </IdInitNode>
                </VarDeclNode>
                <VarDeclNode>
                    <Type>FLOAT</Type>
                    <IdInitNode>
                        <IdentifierExpression>totale</IdentifierExpression>
                        <IntegerConstant>0</IntegerConstant>
                    </IdInitNode>
                </VarDeclNode>
                <VarDeclNode>
                    <Type>INTEGER</Type>
                    <IdInitNode>
                        <IdentifierExpression>i</IdentifierExpression>
                        <IntegerConstant>0</IntegerConstant>
                    </IdInitNode>
                </VarDeclNode>
                <ReadStat>
                    <StringConstant>Inserisci primo numero: </StringConstant>
                    <IdentifierExpression>num1</IdentifierExpression>
                </ReadStat>
                <ReadStat>
                    <StringConstant>Inserisci secondo numero: </StringConstant>
                    <IdentifierExpression>num2</IdentifierExpression>
                </ReadStat>
                <IfStat>
                    <BinaryExpression>
                        <BinaryExpression>
                            <IdentifierExpression>num1</IdentifierExpression>
                            <Operation>LT</Operation>
                            <IntegerConstant>0</IntegerConstant>
                        </BinaryExpression>
                        <Operation>AND</Operation>
                        <BinaryExpression>
                            <IdentifierExpression>num2</IdentifierExpression>
                            <Operation>LT</Operation>
                            <IntegerConstant>0</IntegerConstant>
                        </BinaryExpression>
                    </BinaryExpression>
                    <Body>
                        <AssignStat>
                            <IdentifierExpression>tmp1</IdentifierExpression>
                            <BinaryExpression>
                                <IdentifierExpression>num1</IdentifierExpression>
                                <Operation>TIMES</Operation>
                                <UnaryExpression>
                                    <Operation>MINUS</Operation>
                                    <IntegerConstant>1</IntegerConstant>
                                </UnaryExpression>
                            </BinaryExpression>
                        </AssignStat>
                        <AssignStat>
                            <IdentifierExpression>tmp2</IdentifierExpression>
                            <BinaryExpression>
                                <IdentifierExpression>num2</IdentifierExpression>
                                <Operation>TIMES</Operation>
                                <UnaryExpression>
                                    <Operation>MINUS</Operation>
                                    <IntegerConstant>1</IntegerConstant>
                                </UnaryExpression>
                            </BinaryExpression>
                        </AssignStat>
                    </Body>
                    <ElseStat>
                        <Body>
                            <AssignStat>
                                <IdentifierExpression>tmp1</IdentifierExpression>
                                <IdentifierExpression>num1</IdentifierExpression>
                            </AssignStat>
                            <AssignStat>
                                <IdentifierExpression>tmp2</IdentifierExpression>
                                <IdentifierExpression>num2</IdentifierExpression>
                            </AssignStat>
                        </Body>
                    </ElseStat>
                </IfStat>
                <IfStat>
                    <BinaryExpression>
                        <IdentifierExpression>tmp2</IdentifierExpression>
                        <Operation>GE</Operation>
                        <IntegerConstant>0</IntegerConstant>
                    </BinaryExpression>
                    <Body>
                        <WhileStat>
                            <BinaryExpression>
                                <IdentifierExpression>i</IdentifierExpression>
                                <Operation>LT</Operation>
                                <IdentifierExpression>tmp2</IdentifierExpression>
                            </BinaryExpression>
                            <Body>
                                <AssignStat>
                                    <IdentifierExpression>totale</IdentifierExpression>
                                    <BinaryExpression>
                                        <IdentifierExpression>totale</IdentifierExpression>
                                        <Operation>PLUS</Operation>
                                        <IdentifierExpression>tmp1</IdentifierExpression>
                                    </BinaryExpression>
                                </AssignStat>
                                <AssignStat>
                                    <IdentifierExpression>i</IdentifierExpression>
                                    <BinaryExpression>
                                        <IdentifierExpression>i</IdentifierExpression>
                                        <Operation>PLUS</Operation>
                                        <IntegerConstant>1</IntegerConstant>
                                    </BinaryExpression>
                                </AssignStat>
                            </Body>
                        </WhileStat>
                    </Body>
                    <ElseStat>
                        <Body>
                            <WhileStat>
                                <BinaryExpression>
                                    <IdentifierExpression>i</IdentifierExpression>
                                    <Operation>LT</Operation>
                                    <IdentifierExpression>tmp1</IdentifierExpression>
                                </BinaryExpression>
                                <Body>
                                    <AssignStat>
                                        <IdentifierExpression>totale</IdentifierExpression>
                                        <BinaryExpression>
                                            <IdentifierExpression>totale</IdentifierExpression>
                                            <Operation>PLUS</Operation>
                                            <IdentifierExpression>tmp2</IdentifierExpression>
                                        </BinaryExpression>
                                    </AssignStat>
                                    <AssignStat>
                                        <IdentifierExpression>i</IdentifierExpression>
                                        <BinaryExpression>
                                            <IdentifierExpression>i</IdentifierExpression>
                                            <Operation>PLUS</Operation>
                                            <IntegerConstant>1</IntegerConstant>
                                        </BinaryExpression>
                                    </AssignStat>
                                </Body>
                            </WhileStat>
                        </Body>
                    </ElseStat>
                </IfStat>
                <Writeln>
                    <StringConstant>Il prodotto tra </StringConstant>
                    <IdentifierExpression>num1</IdentifierExpression>
                    <StringConstant>e</StringConstant>
                    <IdentifierExpression>num2</IdentifierExpression>
                    <StringConstant> Ã¨ </StringConstant>
                    <IdentifierExpression>totale</IdentifierExpression>
                </Writeln>
            </Body>
        </FuncDeclNode>
        <FuncDeclNode Type="INTEGER">
            <IdentifierExpression>Nfibonacci</IdentifierExpression>
            <ParamDecl>
                <Type-in>INTEGER</Type-in>
                <IdentifierExpression>n</IdentifierExpression>
            </ParamDecl>
            <Body>
                <IfStat>
                    <BinaryExpression>
                        <IdentifierExpression>n</IdentifierExpression>
                        <Operation>EQ</Operation>
                        <IntegerConstant>0</IntegerConstant>
                    </BinaryExpression>
                    <Body>
                        <ReturnStat>
                            <IntegerConstant>0</IntegerConstant>
                        </ReturnStat>
                    </Body>
                </IfStat>
                <IfStat>
                    <BinaryExpression>
                        <IdentifierExpression>n</IdentifierExpression>
                        <Operation>EQ</Operation>
                        <IntegerConstant>1</IntegerConstant>
                    </BinaryExpression>
                    <Body>
                        <ReturnStat>
                            <IntegerConstant>1</IntegerConstant>
                        </ReturnStat>
                    </Body>
                </IfStat>
                <ReturnStat>
                    <BinaryExpression>
                        <FunCallExpr>
                            <IdentifierExpression>Nfibonacci</IdentifierExpression>
                            <BinaryExpression>
                                <IdentifierExpression>n</IdentifierExpression>
                                <Operation>MINUS</Operation>
                                <IntegerConstant>1</IntegerConstant>
                            </BinaryExpression>
                        </FunCallExpr>
                        <Operation>PLUS</Operation>
                        <FunCallExpr>
                            <IdentifierExpression>Nfibonacci</IdentifierExpression>
                            <BinaryExpression>
                                <IdentifierExpression>n</IdentifierExpression>
                                <Operation>MINUS</Operation>
                                <IntegerConstant>2</IntegerConstant>
                            </BinaryExpression>
                        </FunCallExpr>
                    </BinaryExpression>
                </ReturnStat>
            </Body>
        </FuncDeclNode>
        <FuncDeclNode Type="VOID">
            <IdentifierExpression>stampaMenu</IdentifierExpression>
            <Body>
                <Writeln>
                    <StringConstant>Che operazione vuoi eseguire</StringConstant>
                </Writeln>
                <Writeln>
                    <StringConstant>1 - Somma di due numeri</StringConstant>
                </Writeln>
                <Writeln>
                    <StringConstant>2 - moltiplicazione di due numeri utilizzando la somma</StringConstant>
                </Writeln>
                <Writeln>
                    <StringConstant>3 - divisione intera fra due numeri positivi</StringConstant>
                </Writeln>
                <Writeln>
                    <StringConstant>4 - lâelevamento a potenza</StringConstant>
                </Writeln>
                <Writeln>
                    <StringConstant>5 - successione di fibonacci</StringConstant>
                </Writeln>
            </Body>
        </FuncDeclNode>
        <FuncDeclNode Type="BOOL">
            <IdentifierExpression>dividi_interi</IdentifierExpression>
            <ParamDecl>
                <Type-in>INTEGER</Type-in>
                <IdentifierExpression>a</IdentifierExpression>
                <IdentifierExpression>b</IdentifierExpression>
            </ParamDecl>
            <ParamDecl>
                <Type-out>INTEGER</Type-out>
                <IdentifierExpression>result</IdentifierExpression>
            </ParamDecl>
            <Body>
                <IfStat>
                    <BinaryExpression>
                        <IdentifierExpression>b</IdentifierExpression>
                        <Operation>EQ</Operation>
                        <IntegerConstant>0</IntegerConstant>
                    </BinaryExpression>
                    <Body>
                        <AssignStat>
                            <IdentifierExpression>result</IdentifierExpression>
                            <IntegerConstant>0</IntegerConstant>
                        </AssignStat>
                        <ReturnStat>
                            <BooleanConstant>false</BooleanConstant>
                        </ReturnStat>
                    </Body>
                    <ElseStat>
                        <Body>
                            <AssignStat>
                                <IdentifierExpression>result</IdentifierExpression>
                                <BinaryExpression>
                                    <IdentifierExpression>a</IdentifierExpression>
                                    <Operation>DIV</Operation>
                                    <IdentifierExpression>b</IdentifierExpression>
                                </BinaryExpression>
                            </AssignStat>
                            <ReturnStat>
                                <BooleanConstant>true</BooleanConstant>
                            </ReturnStat>
                        </Body>
                    </ElseStat>
                </IfStat>
            </Body>
        </FuncDeclNode>
        <FuncDeclNode Type="VOID">
            <IdentifierExpression>stampaSequenzaFibonacci</IdentifierExpression>
            <ParamDecl>
                <Type-in>INTEGER</Type-in>
                <IdentifierExpression>n</IdentifierExpression>
            </ParamDecl>
            <Body>
                <VarDeclNode>
                    <Type>INTEGER</Type>
                    <IdInitNode>
                        <IdentifierExpression>i</IdentifierExpression>
                        <IntegerConstant>0</IntegerConstant>
                    </IdInitNode>
                </VarDeclNode>
                <WhileStat>
                    <BinaryExpression>
                        <IdentifierExpression>i</IdentifierExpression>
                        <Operation>LT</Operation>
                        <IdentifierExpression>n</IdentifierExpression>
                    </BinaryExpression>
                    <Body>
                        <Writeln>
                            <IdentifierExpression>i</IdentifierExpression>
                            <StringConstant> -&gt; </StringConstant>
                            <FunCallExpr>
                                <IdentifierExpression>Nfibonacci</IdentifierExpression>
                                <IdentifierExpression>i</IdentifierExpression>
                            </FunCallExpr>
                        </Writeln>
                        <AssignStat>
                            <IdentifierExpression>i</IdentifierExpression>
                            <BinaryExpression>
                                <IdentifierExpression>i</IdentifierExpression>
                                <Operation>PLUS</Operation>
                                <IntegerConstant>1</IntegerConstant>
                            </BinaryExpression>
                        </AssignStat>
                    </Body>
                </WhileStat>
            </Body>
        </FuncDeclNode>
    </DeclNode>
    <Main>
        <FuncDeclNode Type="VOID">
            <IdentifierExpression>main</IdentifierExpression>
            <Body>
                <VarDeclNode>
                    <Type>INTEGER</Type>
                    <IdInitNode>
                        <IdentifierExpression>sceltaOp</IdentifierExpression>
                    </IdInitNode>
                </VarDeclNode>
                <VarDeclNode>
                    <Type>FLOAT</Type>
                    <IdInitNode>
                        <IdentifierExpression>result</IdentifierExpression>
                    </IdInitNode>
                    <IdInitNode>
                        <IdentifierExpression>num1</IdentifierExpression>
                        <IntegerConstant>0</IntegerConstant>
                    </IdInitNode>
                </VarDeclNode>
                <VarDeclNode>
                    <Type>VAR</Type>
                    <IdInitObbNode>
                        <IdentifierExpression>num2</IdentifierExpression>
                        <RealConstant>0.0</RealConstant>
                    </IdInitObbNode>
                </VarDeclNode>
                <VarDeclNode>
                    <Type>INTEGER</Type>
                    <IdInitNode>
                        <IdentifierExpression>continuaScelta</IdentifierExpression>
                        <IntegerConstant>1</IntegerConstant>
                    </IdInitNode>
                </VarDeclNode>
                <FunCallStat>
                    <IdentifierExpression>stampaMenu</IdentifierExpression>
                </FunCallStat>
                <ReadStat>
                    <StringConstant>Scegli l'operazione da effettuare</StringConstant>
                    <IdentifierExpression>sceltaOp</IdentifierExpression>
                </ReadStat>
                <WhileStat>
                    <BinaryExpression>
                        <BinaryExpression>
                            <BinaryExpression>
                                <IdentifierExpression>continuaScelta</IdentifierExpression>
                                <Operation>NE</Operation>
                                <IntegerConstant>0</IntegerConstant>
                            </BinaryExpression>
                            <Operation>AND</Operation>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>GE</Operation>
                                <IntegerConstant>1</IntegerConstant>
                            </BinaryExpression>
                        </BinaryExpression>
                        <Operation>AND</Operation>
                        <BinaryExpression>
                            <IdentifierExpression>sceltaOp</IdentifierExpression>
                            <Operation>LE</Operation>
                            <IntegerConstant>5</IntegerConstant>
                        </BinaryExpression>
                    </BinaryExpression>
                    <Body>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>1</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <ReadStat>
                                    <StringConstant>Inserisci il primo numero</StringConstant>
                                    <IdentifierExpression>num1</IdentifierExpression>
                                </ReadStat>
                                <ReadStat>
                                    <StringConstant>Inserisci il secondo numero</StringConstant>
                                    <IdentifierExpression>num2</IdentifierExpression>
                                </ReadStat>
                                <Writeln>
                                    <StringConstant>La somma tra </StringConstant>
                                    <IdentifierExpression>num1</IdentifierExpression>
                                    <StringConstant> e </StringConstant>
                                    <IdentifierExpression>num2</IdentifierExpression>
                                    <StringConstant> e' </StringConstant>
                                    <BinaryExpression>
                                        <IdentifierExpression>num1</IdentifierExpression>
                                        <Operation>PLUS</Operation>
                                        <IdentifierExpression>num2</IdentifierExpression>
                                    </BinaryExpression>
                                </Writeln>
                            </Body>
                        </IfStat>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>2</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <FunCallStat>
                                    <IdentifierExpression>prodotto_tramite_addizione</IdentifierExpression>
                                </FunCallStat>
                            </Body>
                        </IfStat>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>3</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <VarDeclNode>
                                    <Type>INTEGER</Type>
                                    <IdInitNode>
                                        <IdentifierExpression>result</IdentifierExpression>
                                    </IdInitNode>
                                </VarDeclNode>
                                <ReadStat>
                                    <StringConstant>Inserisci il primo numero</StringConstant>
                                    <IdentifierExpression>num1</IdentifierExpression>
                                </ReadStat>
                                <ReadStat>
                                    <StringConstant>Inserisci il secondo numero</StringConstant>
                                    <IdentifierExpression>num2</IdentifierExpression>
                                </ReadStat>
                                <IfStat>
                                    <BinaryExpression>
                                        <BinaryExpression>
                                            <IdentifierExpression>num1</IdentifierExpression>
                                            <Operation>GE</Operation>
                                            <IntegerConstant>0</IntegerConstant>
                                        </BinaryExpression>
                                        <Operation>AND</Operation>
                                        <BinaryExpression>
                                            <IdentifierExpression>num2</IdentifierExpression>
                                            <Operation>GE</Operation>
                                            <IntegerConstant>0</IntegerConstant>
                                        </BinaryExpression>
                                    </BinaryExpression>
                                    <Body>
                                        <IfStat>
                                            <FunCallExpr>
                                                <IdentifierExpression>dividi_interi</IdentifierExpression>
                                                <IdentifierExpression>num1</IdentifierExpression>
                                                <IdentifierExpression>num2</IdentifierExpression>
                                                <IdentifierExpression>result</IdentifierExpression>
                                            </FunCallExpr>
                                            <Body>
                                                <Writeln>
                                                    <StringConstant>il risultato della divisione tra </StringConstant>
                                                    <IdentifierExpression>num1</IdentifierExpression>
                                                    <StringConstant> e </StringConstant>
                                                    <IdentifierExpression>num2</IdentifierExpression>
                                                    <StringConstant/>
                                                    <IdentifierExpression>result</IdentifierExpression>
                                                </Writeln>
                                            </Body>
                                            <ElseStat>
                                                <Body>
                                                    <Writeln>
                                                        <StringConstant>Attenzione denominatore uguale a 0</StringConstant>
                                                    </Writeln>
                                                </Body>
                                            </ElseStat>
                                        </IfStat>
                                    </Body>
                                    <ElseStat>
                                        <Body>
                                            <Writeln>
                                                <StringConstant>Errore uno dei due numeri inseriti non Ã¨ un intero positivo</StringConstant>
                                            </Writeln>
                                        </Body>
                                    </ElseStat>
                                </IfStat>
                            </Body>
                        </IfStat>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>4</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <VarDeclNode>
                                    <Type>FLOAT</Type>
                                    <IdInitNode>
                                        <IdentifierExpression>num1</IdentifierExpression>
                                    </IdInitNode>
                                    <IdInitNode>
                                        <IdentifierExpression>esponente</IdentifierExpression>
                                    </IdInitNode>
                                </VarDeclNode>
                                <ReadStat>
                                    <StringConstant>Inserisci numero</StringConstant>
                                    <IdentifierExpression>num1</IdentifierExpression>
                                </ReadStat>
                                <ReadStat>
                                    <StringConstant>Inserisci esponente </StringConstant>
                                    <IdentifierExpression>esponente</IdentifierExpression>
                                </ReadStat>
                                <Writeln>
                                    <IdentifierExpression>num1</IdentifierExpression>
                                    <StringConstant>^</StringConstant>
                                    <IdentifierExpression>esponente</IdentifierExpression>
                                    <StringConstant> e' </StringConstant>
                                    <BinaryExpression>
                                        <IdentifierExpression>num1</IdentifierExpression>
                                        <Operation>POW</Operation>
                                        <IdentifierExpression>esponente</IdentifierExpression>
                                    </BinaryExpression>
                                </Writeln>
                            </Body>
                        </IfStat>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>sceltaOp</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>5</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <VarDeclNode>
                                    <Type>INTEGER</Type>
                                    <IdInitNode>
                                        <IdentifierExpression>num2</IdentifierExpression>
                                    </IdInitNode>
                                    <IdInitNode>
                                        <IdentifierExpression>esponente</IdentifierExpression>
                                    </IdInitNode>
                                </VarDeclNode>
                                <ReadStat>
                                    <StringConstant>Inserisci quanti numeri della sequenza di fibonacci visualizzare</StringConstant>
                                    <IdentifierExpression>num2</IdentifierExpression>
                                </ReadStat>
                                <IfStat>
                                    <BinaryExpression>
                                        <IdentifierExpression>num2</IdentifierExpression>
                                        <Operation>LE</Operation>
                                        <IntegerConstant>0</IntegerConstant>
                                    </BinaryExpression>
                                    <Body>
                                        <Writeln>
                                            <StringConstant>Errore!: numero inserito negativo oppure uguale a 0</StringConstant>
                                        </Writeln>
                                    </Body>
                                    <ElseStat>
                                        <Body>
                                            <Writeln>
                                                <StringConstant>La sequenza di fibonacci per </StringConstant>
                                                <IdentifierExpression>num2</IdentifierExpression>
                                                <StringConstant> e':</StringConstant>
                                            </Writeln>
                                            <FunCallStat>
                                                <IdentifierExpression>stampaSequenzaFibonacci</IdentifierExpression>
                                                <IdentifierExpression>num2</IdentifierExpression>
                                            </FunCallStat>
                                        </Body>
                                    </ElseStat>
                                </IfStat>
                            </Body>
                        </IfStat>
                        <ReadStat>
                            <StringConstant>Vuoi continuare? (0: NO, 1: SI)</StringConstant>
                            <IdentifierExpression>continuaScelta</IdentifierExpression>
                        </ReadStat>
                        <WhileStat>
                            <BinaryExpression>
                                <BinaryExpression>
                                    <IdentifierExpression>continuaScelta</IdentifierExpression>
                                    <Operation>NE</Operation>
                                    <IntegerConstant>0</IntegerConstant>
                                </BinaryExpression>
                                <Operation>AND</Operation>
                                <BinaryExpression>
                                    <IdentifierExpression>continuaScelta</IdentifierExpression>
                                    <Operation>NE</Operation>
                                    <IntegerConstant>1</IntegerConstant>
                                </BinaryExpression>
                            </BinaryExpression>
                            <Body>
                                <ReadStat>
                                    <StringConstant>Inserire 0 per terminare, 1 per continuare!</StringConstant>
                                    <IdentifierExpression>continuaScelta</IdentifierExpression>
                                </ReadStat>
                            </Body>
                        </WhileStat>
                        <IfStat>
                            <BinaryExpression>
                                <IdentifierExpression>continuaScelta</IdentifierExpression>
                                <Operation>EQ</Operation>
                                <IntegerConstant>1</IntegerConstant>
                            </BinaryExpression>
                            <Body>
                                <FunCallStat>
                                    <IdentifierExpression>stampaMenu</IdentifierExpression>
                                </FunCallStat>
                                <ReadStat>
                                    <StringConstant>Scegli loperazione da effettuare</StringConstant>
                                    <IdentifierExpression>sceltaOp</IdentifierExpression>
                                </ReadStat>
                            </Body>
                        </IfStat>
                    </Body>
                </WhileStat>
                <Writeln>
                    <StringConstant>Il programma Ã¨ terminato!!!</StringConstant>
                </Writeln>
            </Body>
        </FuncDeclNode>
    </Main>
</Programm>
